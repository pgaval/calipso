<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>gr.abiss.calipso</groupId>
		<version>2.3.0-SNAPSHOT</version>
		<artifactId>calipso-parent</artifactId>
	</parent>
	<artifactId>calipso-war</artifactId>
	<packaging>war</packaging>
	<name>Calipso WAR</name>
	<description>
        Calipso is the ideal department and team collaboration system for your organization. 
        Calipso is used to help teams maximize their throughput, improve quality, reduce rework 
        and meet project deadlines. Features include customizable workflows, field level 
        permissions, e-mail and LDAP integration, asset management, file attachments and a 
        detailed history view.
    </description>
	<url>http://calipso.abiss.gr</url>
	 <scm>
        <url>http://code.google.com/p/calipso/source/browse</url>
        <connection>scm:svn:http://calipso.googlecode.com/svn/trunk/calipso-war/</connection>
        <developerConnection>scm:svn:https://calipso.googlecode.com/svn/trunk/calipso-war/</developerConnection>
    </scm>
	<licenses>
		<license>
			<name>The GNU Affero General Public License, Version 3</name>
			<url>http://www.gnu.org/licenses/agpl-3.0.txt</url>
		</license>
	</licenses>
	<distributionManagement>
		<site>
			<id>dev.abiss.gr</id>
			<url>scp://dev.abiss.gr/opt/coolstack/apache2/dev_abiss_gr/calipso</url>
		</site>
	</distributionManagement>
	<repositories>
		<!--repository>
			<id>openqa.org</id>
			<name>selenium snapshot</name>
			<url>http://nexus.openqa.org/content/repositories/releases</url>
		</repository-->
		<repository>
			<id>jboss</id>
			<name>JBoss repository</name>
			<url>http://repository.jboss.org/maven2</url>
		</repository>
		<repository>
			<id>java.net</id>
			<name>java.net repository</name>
			<url>http://download.java.net/maven/2</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<!-- pluginRepository> <id>Wakaleo Repository</id> <url>http://maven.wakaleo.com/repos/</url> 
			</pluginRepository> <pluginRepository> <id>jtrac.info</id> <name>custom ant 
			integration plugin</name> <url>http://j-trac.sourceforge.net/repository</url> 
			</pluginRepository>
		<pluginRepository>
			<id>mc-release</id>
			<name>Local Maven repository of releases</name>
			<url>http://mc-repo.googlecode.com/svn/maven2/releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>mc-snapshot</id>
			<name>Local Maven repository of snapshots</name>
			<url>http://mc-repo.googlecode.com/svn/maven2/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository -->
	</pluginRepositories>
	
	<reporting>
		<plugins>
			<plugin>
				<groupId>com.wakaleo.schemaspy</groupId>
				<artifactId>maven-schemaspy-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<databaseType>mysql</databaseType>
					<database>calipso21</database>
					<host>localhost</host>
					<user>schemaspy</user>
					<!-- password></password -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.5</version>
				<!-- configuration> <configLocation>./etc/checkstyle.xml</configLocation> 
					</configuration -->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.3.1</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>
		</plugins>


	</reporting>
	<build>
		<finalName>calipso</finalName>
		<!-- outputDirectory>${project.build.outputDirectory}</outputDirectory -->
		<filters>
			<filter>build.properties</filter>
		</filters>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.class</exclude>
					<exclude>**/messages_*.properties</exclude>
				</excludes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/messages_*.properties</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<!-- for Wicket HTML files -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.html</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
		      <groupId>org.codehaus.mojo</groupId>
			  <artifactId>buildnumber-maven-plugin</artifactId>
			<version>1.0</version>
		      <executions>
		        <execution>
		          <phase>validate</phase>
		          <goals>
		            <goal>create</goal>
		          </goals>
		        </execution>
		      </executions>
		    </plugin>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<additionalProjectnatures>
						<projectnature>wicketbench.wicketnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>wicketbench.associatedMarkupAuditor</buildcommand>
					</additionalBuildcommands>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-license-plugin</artifactId>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<version>1.8.0</version>
				<configuration>
					<header>src/etc/header-agpl3-changes.txt</header>
					<validHeaders>
						<validHeader>src/etc/header-agpl3.txt</validHeader>
					</validHeaders>
					<failIfMissing>true</failIfMissing>
					<strictCheck>false</strictCheck>
					<includes>
						<include>src/**/*.java</include>
					</includes>
					<!-- excludes> <exclude>LICENSE.txt</exclude> <exclude>NOTICE.txt</exclude> 
						<exclude>src/test/data/**</exclude> <exclude>src/test/integration/**</exclude> 
						<exclude>src/test/resources/**</exclude> </excludes -->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<debug>true</debug>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showWarnings>false</showWarnings>
				</configuration>
			</plugin>
			<!--plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>native2ascii-maven-plugin</artifactId> 
				<executions> <execution> <goals> <goal>native2ascii</goal> </goals> <configuration> 
				<encoding>${project.build.sourceEncoding}</encoding> <src>src/main/resources</src> 
				<includes>**/messages*.properties</includes> </configuration> </execution> 
				</executions> </plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml> 
					<archive>
						<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<configuration>
					<!-- Reload can be set to either 'automatic' or 'manual' if 'manual' 
						then the context can be reloaded by a linefeed (i.e. pressing ENTER) in the 
						console. If 'automatic' then traditional reloading on changed files is enabled. 
						You will need to set the interval for automatic reloading: <scanIntervalSeconds>10</scanIntervalSeconds> -->
					<reload>manual</reload>
					<webAppConfig>
						<contextPath>/calipso</contextPath>
					</webAppConfig>
					<requestLog implementation="org.mortbay.jetty.NCSARequestLog">
						<filename>target/yyyy_mm_dd.request.log</filename>
						<retainDays>90</retainDays>
						<append>true</append>
						<extended>false</extended>
						<logTimeZone>GMT</logTimeZone>
					</requestLog>
					<systemProperties>
						<systemProperty>
							<name>org.mortbay.jetty.Request.maxFormContentSize</name>
							<value>500000</value>
						</systemProperty>
					</systemProperties>
				</configuration>
				<dependencies>
					<dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.17</version></dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>
